<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GoCodes</title>
    <link>https://xiaobu2020.github.io/</link>
    <description>Recent content on GoCodes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 25 Sep 2020 21:20:52 +0800</lastBuildDate>
    
	<atom:link href="https://xiaobu2020.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java中的锁</title>
      <link>https://xiaobu2020.github.io/post/juc/</link>
      <pubDate>Fri, 25 Sep 2020 21:20:52 +0800</pubDate>
      
      <guid>https://xiaobu2020.github.io/post/juc/</guid>
      <description>Java提供了丰富的锁，每种锁都包含其不同的特性，在适当的场景下能够展现出非常高的效率。本文以JDK8，为例，介绍主流锁的知识点，以及不同的使用场景。 首先，按照特性来定义锁，将锁进行归类。如下图所示。 Java中的锁分类 1.悲观锁 VS 乐观锁 乐观锁和悲观锁，体现了看待线程同步的不同角度</description>
    </item>
    
    <item>
      <title>JVM虚拟机</title>
      <link>https://xiaobu2020.github.io/post/blog/</link>
      <pubDate>Fri, 25 Sep 2020 20:09:11 +0800</pubDate>
      
      <guid>https://xiaobu2020.github.io/post/blog/</guid>
      <description>一、运行时数据区域 程序计数器 记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。 Java 虚拟机栈 每个 Java 方法在执行的同时会创建一个栈帧用于存储局部变量表、操作数栈、常量池引用等信息。从方法调用直至执行完成的过程，对应着一个栈帧在 Java 虚拟机栈中入栈和出栈的过程。 可以通过 -Xss</description>
    </item>
    
  </channel>
</rss>